{"version":3,"file":"static/js/7.97e47b56.chunk.js","mappings":"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","sources":["api/api.js","components/pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'fb80b48b1255806de867923f1e41971b';\n\n// Функція для отримання списку найпопулярніших фільмів на сьогодні\nasync function getTrendingMovies() {\n  try {\n    const url = `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n}\n\n// Функція для пошуку фільму за ключовим словом\nasync function searchMovies(query, page = 1) {\n  try {\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`;\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n}\n\n// Функція для отримання повної інформації про фільм за його ідентифікатором\nasync function getMovieDetails(movieId) {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    return null;\n  }\n}\n\n// Функція для отримання інформації про акторський склад фільму за його ідентифікатором\nasync function getMovieCredits(movieId) {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    return [];\n  }\n}\n\n// Функція для отримання оглядів фільму за його ідентифікатором\nasync function getMovieReviews(movieId) {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    return [];\n  }\n}\n\nexport {\n  getTrendingMovies,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { searchMovies } from '../../api/api';\n\nconst Movies = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchPerformed, setSearchPerformed] = useState(false); // Додайте новий стан\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const fetchData = useCallback(async (query) => {\n    try {\n      const movies = await searchMovies(query);\n      setSearchResults(movies);\n      setSearchPerformed(true); // Позначте, що пошук виконано\n    } catch (error) {\n      console.error('Error searching movies:', error);\n    }\n  }, []);\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) {\n      setSearchTerm(query);\n      fetchData(query);\n    }\n  }, [searchParams, fetchData]);\n\n  const location = useLocation();\n\n  const onGoBack = () => {\n    if (location.pathname.includes('/movies')) {\n      window.history.back();\n    } else {\n      window.location.href = '/';\n    }\n  };\n\n  const handleSubmitSearchTerm = (query) => {\n    setSearchParams({ query: query });\n  };\n\n  return (\n    <div>\n      <h1>Search Movies</h1>\n      <input\n        type=\"text\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n      <button onClick={() => handleSubmitSearchTerm(searchTerm)}>Search</button>\n      {searchPerformed && searchResults.length > 0 ? (\n        <div>\n          <h2>Search Results</h2>\n          <ul>\n            {searchResults.map((movie) => (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : searchPerformed && searchResults.length === 0 ? (\n        <p>No movies found for your search.</p>\n      ) : null}\n      <button onClick={onGoBack}>Go Back</button>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","getTrendingMovies","url","axios","response","data","results","console","error","searchMovies","query","page","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","useState","searchTerm","setSearchTerm","searchResults","setSearchResults","searchPerformed","setSearchPerformed","useSearchParams","searchParams","setSearchParams","fetchData","useCallback","movies","useEffect","get","location","useLocation","type","value","onChange","e","target","onClick","length","map","movie","to","id","title","pathname","includes","window","history","back","href"],"sourceRoot":""}